name: Generate PDF from Wiki

on:
  schedule:
    - cron: '0 15 * * *' # (UTC 기준 15시 -> 한국 기준 0시) 마다 MD -> PDF 변환
  workflow_dispatch:
  repository_dispatch:
    types: [wiki-updated]

env:
  REPO_OWNER: RobomationLAB # github username 작성
  REPO_NAME: Coding_Guide_KR # main repository name 작성
  WIKI_REPO_NAME: Coding_Guide_KR.wiki # wiki repository name 작성
  COMMITTER_NAME: github-actions[bot] 
  COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
  BRANCH: main
  GH_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          token: ${{ env.GH_TOKEN }}

      - name: Clone Wiki repository
        run: |
          git clone https://${{ env.GH_TOKEN }}@github.com/${{ env.REPO_OWNER }}/${{ env.WIKI_REPO_NAME }}.git wiki
          cd wiki
          git config user.name "${{ env.COMMITTER_NAME }}"
          git config user.email "${{ env.COMMITTER_EMAIL }}"

      - name: Cache LaTeX packages
        uses: actions/cache@v3
        with:
          path: |
            /usr/share/texlive
            /usr/share/texmf
          key: ${{ runner.os }}-texlive-${{ hashFiles('**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-texlive-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-lang-cjk \
            texlive-latex-extra \
            texlive-lang-chinese \
            lmodern \
            fonts-noto-cjk

      - name: Create custom font LaTeX header
        run: |
          cd wiki
          cat > font-custom.tex << 'EOF'
          % Package for any font size
          \usepackage{anyfontsize}

          % Code highlighting and verbatim - 5pt font
          \usepackage{fancyvrb}
          \usepackage{fvextra}

          % Define Highlighting environment for pandoc code blocks - 5pt
          \DefineVerbatimEnvironment{Highlighting}{Verbatim}{
            % fontsize=\fontsize{5pt}{6pt}\selectfont,
            breaklines=true,
            breaksymbolleft={},
            showspaces=false,
            showtabs=false,
            commandchars=\\\{\}
          }

          % Override verbatim environment - 5pt
          % \fvset{fontsize=\fontsize{5pt}{6pt}\selectfont}

          % Inline code - 5pt font
          \let\oldtexttt\texttt
          % \renewcommand{\texttt}[1]{{\fontsize{5pt}{6pt}\selectfont\oldtexttt{#1}}}
          EOF

      - name: Generate PDFs
        run: |
          cd wiki

          # 기본_블록.pdf에 포함될 Wiki 파일명(확장자 제외)
          BLOCK_PAGES=("논리" "조건문" "반복" "연산" "문자열" "리스트" "색상" "소리" "제어" "변수" "함수" "기타")

          # 기본 블록 묶기
          echo "# 기본 블록" > combined_block.md
          echo "" >> combined_block.md
          for page in "${BLOCK_PAGES[@]}"; do
            file="${page}.md"
            if [ -f "$file" ]; then
              echo "# $page" >> combined_block.md
              echo "" >> combined_block.md
              cat "$file" >> combined_block.md
              echo "" >> combined_block.md
              echo "---" >> combined_block.md
              echo "" >> combined_block.md
            fi
          done

          # PDF 생성
          pandoc combined_block.md \
            --pdf-engine=xelatex \
            -V mainfont="Noto Sans CJK KR" \
            -V sansfont="Noto Sans CJK KR" \
            -V monofont="Noto Sans Mono CJK KR" \
            -V CJKmainfont="Noto Sans CJK KR" \
            -V CJKsansfont="Noto Sans CJK KR" \
            -V CJKmonofont="Noto Sans Mono CJK KR" \
            -H font-custom.tex \
            -V geometry:margin=1.5cm \
            -V linestretch=1.5 \
            -V fontsize=11pt \
            --highlight-style=tango \
            -o 기본_블록.pdf

          # 나머지 Wiki 파일 개별 PDF 생성
          for file in *.md; do
            base=$(basename "$file" .md)

            # 기본 블록 페이지면 건너뜀
            skip=false
            for block in "${BLOCK_PAGES[@]}"; do
              if [ "$base" = "$block" ]; then
                skip=true
                break
              fi
            done
            [ "$skip" = true ] && continue

            # PDF 생성
            pandoc "$file" \
              --pdf-engine=xelatex \
              -V mainfont="Noto Sans CJK KR" \
              -V sansfont="Noto Sans CJK KR" \
              -V monofont="Noto Sans Mono CJK KR" \
              -V CJKmainfont="Noto Sans CJK KR" \
              -V CJKsansfont="Noto Sans CJK KR" \
              -V CJKmonofont="Noto Sans Mono CJK KR" \
              -H font-custom.tex \
              -V geometry:margin=1.5cm \
              -V linestretch=1.5 \
              -V fontsize=11pt \
              --highlight-style=tango \
              -o "${base}.pdf" 
          done

      - name: Commit PDF to repository
        run: |
          cd ${{ github.workspace }}
        
          mkdir -p PDFs
          mv wiki/*.pdf PDFs/
          rm -rf wiki/
        
          git config user.name "${COMMITTER_NAME}"
          git config user.email "${COMMITTER_EMAIL}"
          git remote set-url origin https://x-access-token:${{ env.GH_TOKEN }}@github.com/${REPO_OWNER}/${REPO_NAME}.git
          git fetch origin
          git pull origin $BRANCH --rebase || true
          git add PDFs/*.pdf
          
          if ! git diff --staged --quiet; then
            git commit -m "Update Wiki to PDFs"
            git push origin $BRANCH
          fi
